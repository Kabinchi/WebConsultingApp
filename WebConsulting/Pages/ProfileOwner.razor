@page "/pOwner"
@using Microsoft.EntityFrameworkCore
@using WebConsulting.Models
@inject ConsultingDBContext DbContext
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<!DOCTYPE html>
<html lang="ru">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Профиль главного администратора</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        html,
        body {
            height: 100%;
            margin: 0;
        }

        body {
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }

        main {
            flex-grow: 1;
        }

        table {
            table-layout: fixed;
            width: 100%;
            overflow-x: auto;
        }

        th,
        td {
            word-wrap: break-word;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    </style>
</head>

<body class="bg-gray-100 text-gray-800">
    <nav class="bg-gray-800 text-white p-4">
        <div class="container mx-auto flex justify-between items-center">
            <h1 class="text-xl font-bold">Панель главного администратора</h1>
            <div>
                <button @onclick="HandleLogout" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">
                    Выйти
                </button>
            </div>
        </div>
    </nav>

    <main class="container mx-auto py-8 px-4 lg:px-16 min-h-[calc(95%-64px)]">
        <div class="flex mt-8">
            <div class="w-1/4 p-4 bg-gray-200">
                <button class="w-full py-2 mb-4 rounded @GetTabClass(isUsersTab)"
                        @onclick="ShowUsersTab">
                    Управление пользователями
                </button>
                <button class="w-full py-2 rounded @GetTabClass(!isUsersTab)"
                        @onclick="ShowProfileTab">
                    Профиль
                </button>
            </div>

            <div class="w-3/4 p-4">
                @if (isUsersTab)
                {
                    <div>
                        <h2 class="text-xl font-bold text-gray-800 mb-4">Все пользователи</h2>
                        @if (users == null || users.Count == 0)
                        {
                            <p class="text-gray-600">Нет пользователей.</p>
                        }
                        else
                        {
                            <table class="table-auto w-full bg-white shadow-md rounded-lg">
                                <thead class="bg-gray-200">
                                    <tr>
                                        <th class="px-2 py-2 text-sm">Имя</th>
                                        <th class="px-2 py-2 text-sm">Почта</th>
                                        <th class="px-2 py-2 text-sm">Роль</th>
                                        <th class="px-2 py-2 text-sm">Действия</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var user in users)
                                    {
                                        <tr>
                                            <td class="border px-2 py-2 text-sm">@user.FullName</td>
                                            <td class="border px-2 py-2 text-sm">@user.Email</td>
                                            <td class="border px-2 py-2 text-sm">@user.Role</td>
                                            <td class="border px-2 py-2 text-sm">
                                                <button @onclick="() => ChangeRole(user)" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                                                    Изменить роль
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    </div>
                }
                else
                {
                    <div class="bg-white p-6 shadow-md rounded-lg">
                        <h2 class="text-xl font-bold text-gray-800 mb-4">Профиль главного администратора</h2>
                        <div class="mb-4">
                            <label for="fullName" class="block text-sm font-medium text-gray-700">Имя</label>
                            <input type="text" id="fullName" class="mt-1 block w-full p-2 border border-gray-300 rounded"
                                   @bind="admin.FullName" @bind:event="oninput" disabled="@isFullNameDisabled" />
                            <button @onclick="ToggleFullNameEdit" class="text-blue-500 mt-2">
                                @if (isFullNameDisabled)
                                {
                                    <span>Редактировать</span>
                                }
                                else
                                {
                                    <span>Отменить</span>
                                }
                            </button>
                        </div>

                        <div class="mb-4">
                            <label for="phone" class="block text-sm font-medium text-gray-700">Телефон</label>
                            <input type="text" id="phone" class="mt-1 block w-full p-2 border border-gray-300 rounded"
                                   @bind="admin.PhoneNumber" @bind:event="oninput" disabled="@isPhoneDisabled" />
                            <button @onclick="TogglePhoneEdit" class="text-blue-500 mt-2" @oninput="ValidatePhoneNumber">
                                @if (isPhoneDisabled)
                                {
                                    <span>Редактировать</span>
                                }
                                else
                                {
                                    <span>Отменить</span>
                                }
                            </button>
                            @if (!string.IsNullOrEmpty(phoneError))
                            {
                                <p class="text-red-500 text-sm mt-1">@phoneError</p>
                            }
                        </div>

                        <div class="mb-4">
                            <label for="email" class="block text-sm font-medium text-gray-700">Почта</label>
                            <input type="email" id="email" class="mt-1 block w-full p-2 border border-gray-300 rounded"
                                   @bind="admin.Email" disabled />
                        </div>

                        @if (!isFullNameDisabled || !isPhoneDisabled)
                        {
                            <button @onclick="SaveChanges" class="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                                Сохранить изменения
                            </button>
                        }
                    </div>
                }
            </div>
        </div>
    </main>
</body>

</html>

@code {
    private bool isUsersTab = true;
    private bool isFullNameDisabled = true;
    private bool isPhoneDisabled = true;
    private List<User> users;
    private User admin;
    private string phoneError = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await DbContext.Users.ToListAsync();

            admin = await DbContext.Users.FirstOrDefaultAsync(u => u.Role == "Owner") ?? new User();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при загрузке данных: {ex.Message}");
            users = new List<User>();
        }
    }

    private void ShowUsersTab() => isUsersTab = true;
    private void ShowProfileTab() => isUsersTab = false;

    private void ToggleFullNameEdit() => isFullNameDisabled = !isFullNameDisabled;
    private void TogglePhoneEdit() => isPhoneDisabled = !isPhoneDisabled;

    private async Task SaveChanges()
    {
        if (!string.IsNullOrEmpty(phoneError))
        {
            await JSRuntime.InvokeVoidAsync("alert", "Исправьте ошибки перед сохранением!");
            return;
        }

        try
        {
            DbContext.Users.Update(admin);
            await DbContext.SaveChangesAsync();
            await JSRuntime.InvokeVoidAsync("alert", "Изменения успешно сохранены!");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при сохранении профиля: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", "Произошла ошибка при сохранении!");
        }
        finally
        {
            isFullNameDisabled = true;
            isPhoneDisabled = true;
        }
    }

    private async Task ChangeRole(User user)
    {
        user.Role = user.Role == "User" ? "Admin" : "User"; 

        try
        {
            DbContext.Users.Update(user);
            await DbContext.SaveChangesAsync();
            await JSRuntime.InvokeVoidAsync("alert", "Роль пользователя успешно обновлена!");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при изменении роли: {ex.Message}");
            await JSRuntime.InvokeVoidAsync("alert", "Произошла ошибка при изменении роли!");
        }
    }

    private string GetTabClass(bool isActive) => isActive ? "bg-blue-500 text-white" : "bg-gray-300 text-gray-800";

    private void ValidatePhoneNumber(ChangeEventArgs e)
    {
        var input = e.Value?.ToString() ?? string.Empty;
        var phoneRegex = @"^(?:\+7|8)\d{10}$";
        if (System.Text.RegularExpressions.Regex.IsMatch(input, phoneRegex))
        {
            phoneError = string.Empty;
        }
        else
        {
            phoneError = "Номер телефона должен быть в формате +7XXXXXXXXXX или 8XXXXXXXXXX.";
        }
    }

    private async Task HandleLogout()
    {
        await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "userRole");
        NavigationManager.NavigateTo("/");
    }
}
