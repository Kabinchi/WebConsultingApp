@page "/pAdmin"
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Регистрация | Reputation</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        html,
        body {
            height: 100%;
        }

        body {
            display: flex;
            flex-direction: column;
        }

        main {
            flex-grow: 1;
        }
    </style>
</head>

<body class="bg-gray-100 text-gray-800">

    <main class="container mx-auto py-8 px-4 lg:px-16 min-h-[calc(95%-64px)]">
        <div class="bg-white p-8 shadow-lg rounded-lg max-w-md mx-auto">
            <h1 class="text-2xl font-bold text-gray-800 mb-6">Админ панель</h1>
            <button @onclick="Logout" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Выйти</button>
        </div>
    </main>


</body>

</html>


@code {
    private bool ShowRegistrationButton { get; set; } = true;
    private bool ShowAdminProfile { get; set; } = false;
    private bool ShowUserProfile { get; set; } = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var userRole = await JSRuntime.InvokeAsync<string>("sessionStorage.getItem", "userRole");

            if (!string.IsNullOrEmpty(userRole))
            {
                if (userRole == "Admin")
                {
                    ShowAdminProfile = true;
                }
                else if (userRole == "User")
                {
                    ShowUserProfile = true;
                }
                ShowRegistrationButton = false;
            }
            else
            {
                ShowRegistrationButton = true;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при извлечении данных с сессии: {ex.Message}");
        }
    }
}

@code {
    private async Task Logout()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("sessionStorage.removeItem", "userRole");

            NavigationManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Ошибка при выходе из аккаунта: {ex.Message}");
        }
    }
}